version: "3.8"

networks:
  reactive_resume_network:
    driver: bridge
    name: reactive_resume_network

services:
  postgres:
    image: postgres:16-alpine
    networks:
      - reactive_resume_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata # Added this line
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped # Added restart policy

  # Rest of the services remain the same...
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    networks:
      - reactive_resume_network
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    labels:
      - traefik.enable=true
      - traefik.http.routers.storage.rule=Host(`storage.localhost`)
      - traefik.http.services.storage.loadbalancer.server.port=9000

  chrome:
    image: ghcr.io/browserless/chromium:latest
    networks:
      - reactive_resume_network
    ports:
      - "3333:3000"
    environment:
      TIMEOUT: 10000
      CONCURRENT: 10
      TOKEN: chrome_token
      EXIT_ON_HEALTH_FAILURE: true
      PRE_REQUEST_HEALTH_CHECK: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.printer.rule=Host(`printer.localhost`)
      - traefik.http.services.printer.loadbalancer.server.port=3000

  app:
    image: oryan777/reactive-resume:latest
    networks:
      - reactive_resume_network
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      chrome:
        condition: service_started
    environment:
      # -- Environment Variables --
      PORT: 3000
      NODE_ENV: production

      # -- URLs --
      PUBLIC_URL: http://localhost:3000
      STORAGE_URL: http://localhost:9000\default

      # -- Printer (Chrome) --
      CHROME_TOKEN: chrome_token
      CHROME_URL: ws://chrome:3000

      # -- Database (Postgres) --
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres

      # -- Auth --
      ACCESS_TOKEN_SECRET: access_token_secret
      REFRESH_TOKEN_SECRET: refresh_token_secret

      # -- Emails --
      MAIL_FROM: noreply@localhost

      # -- Storage (Minio) --
      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin
      STORAGE_USE_SSL: false
      STORAGE_SKIP_BUCKET_CHECK: false
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`localhost`)
      - traefik.http.services.app.loadbalancer.server.port=3000

  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - reactive_resume_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  minio_data:
  postgres_data:
